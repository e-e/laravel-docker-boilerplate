version: "3"

services:
  # redis:
  #   image: redis:4
  #   container_name: redis_1
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"

  proxy:
    build:
      context: ./docker/nginx
      dockerfile: proxy.Dockerfile
    container_name: proxy_1
    restart: unless-stopped
    ports:
      - "80:80" # expose 80 on host and sent to 80 in container
    networks:
      - backend
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro

  mysql:
    build:
      context: ./docker/mysql
      dockerfile: mysql.Dockerfile
    container_name: mysql_1
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_HOST: localhost
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    networks:
      - backend
    volumes:
      - mysql-data:/var/lib/mysql

  php:
    build:
      context: ./docker/laravel
      dockerfile: app.Dockerfile
    container_name: php_1
    depends_on: [proxy, mysql]
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - .:/var/www/html
      - ./docker/laravel/000-default.conf:/etc/apache2/sites-available/000-default.conf

volumes:
  mysql-data:

networks:
  backend:
    driver: bridge
